<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.BlogTagsMapper" >

  <select id="getBlogsByTid" parameterType="Long" resultMap="ResultMap">
        SELECT * FROM t_blog b ,t_blog_tags bt
        WHERE b.id = bt.blog_id
        AND bt.tag_id=#{id}
  </select>


  <resultMap id="BaseResultMap" type="com.pojo.BlogTags" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tag_id" property="tag_id" jdbcType="BIGINT" />
    <result column="blog_id" property="blog_id" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="ResultMap" type="com.pojo.Blog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="first_picture" property="first_picture" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="appreciation" property="appreciation" jdbcType="INTEGER" />
    <result column="share_statement" property="share_statement" jdbcType="INTEGER" />
    <result column="commentabled" property="commentabled" jdbcType="INTEGER" />
    <result column="published" property="published" jdbcType="INTEGER" />
    <result column="recommend" property="recommend" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
    <result column="type_id" property="type_id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="tag_ids" property="tag_ids" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tag_id, blog_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pojo.BlogTagsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_blog_tags
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_blog_tags
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_blog_tags
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.BlogTagsExample" >
    delete from t_blog_tags
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.BlogTags" useGeneratedKeys="true" keyProperty="id" >
    insert into t_blog_tags (tag_id, blog_id)
    values (#{tag_id,jdbcType=BIGINT}, #{blog_id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.BlogTags" useGeneratedKeys="true" keyProperty="id" >
    insert into t_blog_tags
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tag_id != null" >
        tag_id,
      </if>
      <if test="blog_id != null" >
        blog_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tag_id != null" >
        #{tag_id,jdbcType=BIGINT},
      </if>
      <if test="blog_id != null" >
        #{blog_id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.BlogTagsExample" resultType="java.lang.Integer" >
    select count(*) from t_blog_tags
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_blog_tags
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tag_id != null" >
        tag_id = #{record.tag_id,jdbcType=BIGINT},
      </if>
      <if test="record.blog_id != null" >
        blog_id = #{record.blog_id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_blog_tags
    set id = #{record.id,jdbcType=INTEGER},
      tag_id = #{record.tag_id,jdbcType=BIGINT},
      blog_id = #{record.blog_id,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.BlogTags" >
    update t_blog_tags
    <set >
      <if test="tag_id != null" >
        tag_id = #{tag_id,jdbcType=BIGINT},
      </if>
      <if test="blog_id != null" >
        blog_id = #{blog_id,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.BlogTags" >
    update t_blog_tags
    set tag_id = #{tag_id,jdbcType=BIGINT},
      blog_id = #{blog_id,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>